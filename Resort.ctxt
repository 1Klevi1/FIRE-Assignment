#BlueJ class context
comment0.target=Resort
comment0.text=\r\n\ This\ class\ implements\ the\ FIRE\ interface.\r\n\r\n\ @author\ Jack\r\n\ @version\ 29/11/2022\r\n
comment1.params=name\ location
comment1.target=Resort(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Constructs\ a\ Resort\ class.\r\n\r\n\ @param\ name\ \ \ \ \ The\ name\ of\ the\ resort.\r\n\ @param\ location\ The\ location\ of\ the\ resort.\r\n
comment10.params=id\ creds
comment10.target=void\ topUpCredits(int,\ int)
comment10.text=\r\n\ Adds\ credits\ to\ a\ pass.\r\n\r\n\ @param\ id\ \ \ \ The\ id\ of\ the\ pass\ to\ add\ credits\ to.\r\n\ @param\ creds\ The\ number\ of\ credits\ to\ add\ to\ the\ pass.\r\n
comment11.params=id
comment11.target=void\ convertPoints(int)
comment11.text=\r\n\ Converts\ a\ pass's\ journey\ points\ into\ credits\ (5\ journey\ points\ equal\ 1\ credit).\r\n\r\n\ @param\ id\ The\ id\ of\ the\ pass\ whose\ points\ are\ to\ be\ converted.\r\n
comment12.params=
comment12.target=void\ loadPasses()
comment12.text=\r\n\ Loads\ the\ example\ passes\ from\ the\ specification.\r\n
comment13.params=
comment13.target=void\ loadIslandsAndFerries()
comment13.text=\r\n\ Loads\ the\ example\ islands\ and\ ferries\ from\ the\ specification.\r\n
comment14.params=id
comment14.target=Pass\ getPass(int)
comment14.text=\r\n\ Gets\ a\ pass\ object\ from\ the\ given\ id.\r\n\r\n\ @param\ id\ The\ pass\ id.\r\n\ @return\ The\ pass\ with\ the\ given\ id.\r\n
comment15.params=islandName
comment15.target=Island\ getIsland(java.lang.String)
comment15.text=\r\n\ Gets\ an\ island\ object\ from\ the\ given\ name.\r\n\r\n\ @param\ islandName\ The\ island\ name.\r\n\ @return\ The\ island\ with\ the\ given\ name.\r\n
comment16.params=fer
comment16.target=Ferry\ getFerry(java.lang.String)
comment16.text=\r\n\ Gets\ a\ ferry\ object\ from\ the\ given\ code.\r\n\r\n\ @param\ fer\ The\ ferry\ code.\r\n\ @return\ The\ ferry\ with\ the\ given\ code.\r\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\r\n\ Returns\ information\ about\ the\ resort\ including\ its\ location/name\ and\ all\r\n\ passes\ currently\ on\ each\ island,\ or\ "No\ passes"\ (if\ no\ pass\ is\ on\ that\ island).\r\n\r\n\ @return\ All\ details\ of\ all\ islands\ including\ location\ and\ all\ passes\ currently\r\n\ on\ each\ island,\ or\ "No\ passes"\ if\ an\ island\ has\ no\ passes.\r\n
comment3.params=
comment3.target=java.lang.String\ getAllPassesOnAllIslands()
comment3.text=\r\n\ Returns\ a\ String\ representation\ of\ all\ the\ passes\ on\ all\ islands\r\n\ with\ "No\ passes"\ if\ there\ are\ no\ passes\ on\ an\ island.\r\n\r\n\ @return\ A\ string\ representation\ of\ all\ passes\ on\ all\ islands.\r\n
comment4.params=cd
comment4.target=java.lang.String\ findPassLocation(int)
comment4.text=\r\n\ Returns\ the\ name\ of\ the\ island\ which\ contains\ the\ specified\ pass\ or\ "Not\ found".\r\n\r\n\ @param\ cd\ The\ id\ of\ the\ pass.\r\n\ @return\ The\ name\ of\ the\ island\ which\ contains\ the\ pass,\ or\ "Not\ found".\r\n
comment5.params=cd
comment5.target=java.lang.String\ viewAPass(int)
comment5.text=\r\n\ Returns\ details\ of\ the\ pass\ with\ the\ specified\ id\ or\ "Not\ found".\r\n\r\n\ @param\ cd\ The\ id\ of\ the\ pass.\r\n\ @return\ the\ details\ of\ the\ pass,\ or\ "Not\ found".\r\n
comment6.params=isl
comment6.target=int\ getIslandNumber(java.lang.String)
comment6.text=\r\n\ Given\ the\ name\ of\ an\ island,\ returns\ the\ island\ id\ number\r\n\ or\ -1\ if\ island\ does\ not\ exist.\r\n\r\n\ @param\ isl\ The\ name\ of\ island\r\n\ @return\ id\ The\ number\ of\ the\ island.\r\n
comment7.params=isl
comment7.target=java.lang.String\ getAllPassesOnIsland(java.lang.String)
comment7.text=\r\n\ Returns\ a\ string\ representation\ of\ all\ the\ passes\ on\ a\ specified\ island.\r\n\r\n\ @param\ isl\ The\ name\ of\ the\ island.\r\n\ @return\ A\ string\ representation\ of\ all\ passes\ on\ a\ specified\ island.\r\n
comment8.params=cdId\ ferCode
comment8.target=boolean\ canTravel(int,\ java.lang.String)
comment8.text=\r\n\ Returns\ true\ if\ a\ pass\ is\ allowed\ to\ journey\ using\ a\ ferry,\ false\ otherwise.\r\n\ <p>\r\n\ A\ journey\ can\ be\ made\ if\ all\ the\ following\ conditions\ are\ true\:\r\n\ <ul>\r\n\ <li>The\ rating\ of\ the\ pass\ is\ bigger\ than\ or\ equal\ to\ the\ rating\ of\ the\ destination\ island.</li>\r\n\ <li>The\ destination\ island\ is\ not\ full.</li>\r\n\ <li>The\ pass\ has\ sufficient\ credits\ (a\ journey\ costs\ 3\ credits).</li>\r\n\ <li>The\ pass\ is\ currently\ in\ the\ source\ island.</li>\r\n\ <li>The\ pass\ id\ and\ ferry\ code\ represent\ objects\ in\ the\ system.</li>\r\n\ </ul>\r\n\r\n\ @param\ cdId\ \ \ \ The\ id\ of\ the\ pass\ requesting\ the\ move.\r\n\ @param\ ferCode\ The\ code\ of\ the\ ferry\ journey\ by\ which\ the\ pass\ wants\ to\ move.\r\n\ @return\ Whether\ the\ pass\ is\ allowed\ on\ the\ ferry\ journey\ or\ not.\r\n
comment9.params=pPassId\ ferCode
comment9.target=java.lang.String\ travel(int,\ java.lang.String)
comment9.text=\r\n\ Gets\ the\ result\ of\ a\ pass\ requesting\ to\ journey\ by\ ferry.\r\n\ <p>\r\n\ A\ journey\ will\ be\ successful\ if\ all\ the\ following\ conditions\ are\ true\:\r\n\ <ul>\r\n\ <li>The\ rating\ of\ the\ pass\ is\ bigger\ than\ or\ equal\ to\ the\ rating\ of\ the\ destination\ island.</li>\r\n\ <li>The\ destination\ island\ is\ not\ full.</li>\r\n\ <li>The\ pass\ has\ sufficient\ credits\ (a\ journey\ costs\ 3\ credits).</li>\r\n\ <li>The\ pass\ is\ currently\ in\ the\ source\ island.</li>\r\n\ <li>The\ pass\ id\ and\ ferry\ code\ represent\ objects\ in\ the\ system.</li>\r\n\ </ul>\r\n\ <p>\r\n\ If\ the\ ferry\ journey\ can\ be\ made,\ the\ pass\ is\ removed\ from\ the\ source\ island,\r\n\ added\ to\ the\ destination\ island,\ and\ a\ suitable\ message\ is\ returned.\ Pass\r\n\ information\ should\ be\ updated\ (a\ journey\ costs\ 3\ credits\ and\ journey\ points\r\n\ incremented\ by\ 1).\ If\ the\ ferry\ journey\ cannot\ be\ made,\ the\ state\ of\ the\r\n\ system\ remains\ unchanged\ and\ a\ message\ specifying\ the\ reason\ is\ returned.\r\n\r\n\ @param\ pPassId\ The\ id\ of\ the\ pass\ requesting\ the\ move.\r\n\ @param\ ferCode\ The\ code\ of\ the\ ferry\ by\ which\ the\ pass\ wants\ to\ travel.\r\n\ @return\ The\ result\ of\ the\ request.\r\n
numComments=17
